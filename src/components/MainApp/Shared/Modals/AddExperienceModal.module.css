/* AddExperienceModal.module.css - Extended Styles con Design System */

/* === SUGGESTIONS === */
.suggestions {
  display: flex;
  gap: var(--space-sm);
}

.suggestionButton {
  padding: var(--space-sm) var(--space-lg);
  background: var(--surface-variant);
  border: 2px solid var(--outline);
  /* border-radius: var(--radius-full); */
  border-radius: var(--radius-md);
  font-size: var(--text-sm);
  color: var(--on-surface-variant);
  font-weight: var(--font-medium);
  cursor: pointer;
  transition: var(--transition);
}

.suggestionButton:hover {
  transform: scale(1.1);
}

.suggestionButton:active {
  border-color: var(--secondary);
}

.suggestionButtonActive {
  background: var(--primary-container);
  border-color: var(--primary);
  color: var(--on-primary-container);
  box-shadow: var(--shadow);
  transform: scale(1.1);
}
.suggestionButton:focus {
  border-color: var(--primary);
  color: var(--on-primary-container);
}

.suggestionButtonActive:hover {
  /* Mantiene lo stesso stile quando Ã¨ attivo */
}

/* === CONFIG GRID === */
.configGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--space-lg);
}

/* === NAVIGATION === */
.editNavigation {
  display: flex;
  gap: var(--space-sm);
  margin-bottom: var(--space-lg);
  flex-wrap: wrap;
}

.editNavigation .navButton:first-child {
  flex: 1;
}

.navButtons {
  display: flex;
  justify-content: center;
  width: 100%;
  gap: var(--space-sm);
}

.navButton {
  padding: var(--space-sm) var(--space-md);
  border-radius: var(--radius-sm);
  border: 1px solid var(--outline);
  background: var(--surface);
  color: var(--on-surface);
  font-size: var(--text-sm);
  cursor: pointer;
  transition: var(--transition);
}

.navButton:hover {
  background: var(--surface-variant);
  color: var(--on-surface-variant);
}

.navButton:focus {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

/* === PREVIEW CARD === */
.previewCard {
  background: var(--surface);
  border-radius: var(--radius-lg);
  border: 1px solid var(--outline);
  box-shadow: var(--shadow);
}

.previewPadding {
  padding: var(--space-lg);
}

.previewHeader {
  display: flex;
  align-items: center;
  gap: var(--space-lg);
  margin-bottom: var(--space-lg);
}

.previewIconContainer {
  width: 3rem;
  height: 3rem;
  background: var(--primary-container);
  border-radius: var(--radius-lg);
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid var(--primary);
}

.previewIconLarge {
  font-size: var(--text-xl);
  color: var(--on-primary-container);
}

.previewTitle {
  margin: 0;
  font-size: var(--text-xl);
  font-weight: var(--font-bold);
  color: var(--on-surface);
}

.previewDescription {
  margin: var(--space-xs) 0 0;
  font-size: var(--text-sm);
  color: var(--on-surface-variant);
}

/* === CONFIG SUMMARY === */
.configSummary {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: var(--space-md);
  font-size: var(--text-sm);
  color: var(--on-surface-variant);
}

/* === USER PREVIEW === */
.userPreview {
  background: var(--surface);
  border-radius: var(--radius-lg);
  border: 1px solid var(--outline);
  box-shadow: var(--shadow);
}

.userPreviewContent {
  display: flex;
  align-items: center;
  gap: var(--space-md);
  position: relative;
  justify-content: space-between;
  padding: var(--space-lg);
}

.userAvatar {
  width: 3rem;
  height: 3rem;
  background: var(--secondary-container);
  border-radius: var(--radius-full);
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: var(--shadow);
  border: 1px solid var(--secondary);
}

.userAvatar span {
  font-size: var(--text-xl);
  color: var(--on-secondary-container);
}

.userInfo {
  flex: 1;
}

.userName {
  font-weight: var(--font-bold);
  font-size: var(--text-lg);
  color: var(--on-surface);
}

.userStats {
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  color: var(--on-surface-variant);
  margin-top: var(--space-xs);
}

.userStats span {
  font-size: var(--text-sm);
  font-weight: var(--font-semibold);
}

.userPreviewIcon {
  font-size: 1.875rem;
  opacity: 0.6;
  color: var(--on-surface-variant);
}

/* === CREATE BUTTON === */
.createButton {
  width: 100%;
  padding: var(--space-lg) var(--space-xl);
  border-radius: var(--radius-md);
  transition: var(--transition);
  font-weight: var(--font-bold);
  font-size: var(--text-lg);
  border: 1px solid var(--outline);
  box-shadow: var(--shadow);
}

.createButton.enabled {
  background: var(--primary-container);
  color: var(--on-primary-container);
  border-color: var(--primary);
  cursor: pointer;
}

.createButton.enabled:hover {
  background: var(--primary);
  color: var(--on-primary);
  box-shadow: var(--shadow-lg);
  transform: scale(1.02);
}

.createButton.enabled:active {
  transform: scale(0.98);
}

.createButton.disabled {
  background: var(--surface-variant);
  color: var(--on-surface-variant);
  border-color: var(--outline);
  cursor: not-allowed;
  opacity: 0.6;
}

/* === EXPAND TEXT === */
.expandTextButton {
  color: var(--primary);
  font-size: var(--text-xs);
  background: none;
  border: none;
  cursor: pointer;
  margin-top: var(--space-xs);
  padding: var(--space-xs);
  border-radius: var(--radius-sm);
  font-weight: var(--font-medium);
  transition: var(--transition);
}

.expandTextButton:hover {
  background: var(--primary-container);
  color: var(--on-primary-container);
}

.descriptionContainer {
  line-height: 1.4;
  margin: 0;
  word-wrap: break-word;
  overflow-wrap: break-word;
}

/* === XP PROGRESS === */
.xpProgressContainer {
  margin-top: var(--space-md);
}

.xpProgressBar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  gap: var(--space-xs);
}

.xpStep {
  display: flex;
  flex-direction: column;
  align-items: center;
  cursor: pointer;
  transition: var(--transition);
  z-index: 2;
  position: relative;
}

.xpStep:hover {
  transform: scale(1.1);
}

.xpStepNumber {
  width: 2rem;
  height: 2rem;
  border-radius: var(--radius-full);
  background: var(--surface-variant);
  border: 2px solid var(--outline);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: var(--font-semibold);
  font-size: var(--text-sm);
  color: var(--on-surface-variant);
  transition: var(--transition);
  margin-bottom: var(--space-xs);
}

.xpStepNumber:active {
  border-color: var(--secondary);
}

.xpStepLabel {
  font-size: 0.625rem;
  color: var(--on-surface-variant);
  font-weight: var(--font-medium);
  transition: var(--transition);
}

.xpStepActive .xpStepNumber {
  background: var(--primary-container);
  border-color: var(--primary);
  color: var(--on-primary-container);
  box-shadow: var(--shadow);
  transform: scale(1.1);
}

.xpStepActive .xpStepLabel {
  color: var(--on-surface);
  font-weight: var(--font-semibold);
}

/* === CONTINUE BUTTON (Extended) === */
.continueButton {
  width: 100%;
  padding: var(--space-lg) var(--space-xl);
  border-radius: var(--radius-lg);
  transition: var(--transition);
  font-weight: var(--font-semibold);
  box-shadow: var(--shadow);
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid var(--outline);
}

.continueButton.enabled {
  background: var(--primary-container);
  color: var(--on-primary-container);
  border-color: var(--primary);
  cursor: pointer;
}

.continueButton.enabled:hover {
  background: var(--primary);
  color: var(--on-primary);
  box-shadow: var(--shadow-lg);
  transform: translateY(-1px);
}

.continueButton.disabled {
  background: var(--surface-variant);
  color: var(--on-surface-variant);
  border-color: var(--outline);
  cursor: not-allowed;
  opacity: 0.6;
}

/* === FOCUS STATES === */

.navButton:focus,
.createButton:focus,
.continueButton:focus,
.expandTextButton:focus {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

/* === LOADING STATES === */
.createButton.loading,
.continueButton.loading {
  cursor: wait;
  opacity: 0.8;
}

.createButton.loading::before,
.continueButton.loading::before {
  content: "";
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 2px solid currentColor;
  border-radius: var(--radius-full);
  border-top-color: transparent;
  animation: spin 0.8s linear infinite;
  margin-right: var(--space-sm);
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
