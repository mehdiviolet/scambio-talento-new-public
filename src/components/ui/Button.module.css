/* Button.module.css - Allineato al Design System con CSS Variables */

.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.375rem;
  padding: 0.5rem 0.75rem;
  border: 1px solid;
  backdrop-filter: blur(8px);
  font-size: 0.75rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.1);
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
  background: var(--btn-bg);
  border-color: var(--btn-border);
  color: var(--btn-color);
  text-decoration: none;
  flex: 1;
}

.btn:hover:not(:disabled) {
  background: var(--btn-hover-bg);
  border-color: var(--btn-hover-border);
  color: var(--btn-hover-color);
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.btn:active {
  transform: translateY(0);
}

.btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
}

/* === DIMENSIONI === */
.xs {
  padding: 0.5rem 0.75rem;
  font-size: 0.625rem;
  min-width: 60px;
}

.sm {
  padding: 0.375rem 0.5rem;
  font-size: 0.625rem;
  min-width: 80px;
}

.md {
  padding: 0.5rem 0.75rem;
  font-size: 0.75rem;
  min-width: 100px;
}

.lg {
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  min-width: 120px;
  flex: 1;
}

/* === PRIMARY VARIANTS === */
.primary.solid {
  --btn-bg: var(--primary-container);
  --btn-border: var(--primary);
  --btn-color: var(--primary);
  --btn-hover-bg: var(--primary);
  --btn-hover-border: var(--primary);
  --btn-hover-color: var(--on-primary);
}

.primary.outline {
  --btn-bg: transparent;
  --btn-border: var(--primary);
  --btn-color: var(--primary);
  --btn-hover-bg: var(--primary-container);
  --btn-hover-border: var(--primary);
  --btn-hover-color: var(--on-primary-container);
}

.primary.ghost {
  --btn-bg: transparent;
  --btn-border: transparent;
  --btn-color: var(--primary);
  --btn-hover-bg: var(--primary-container);
  --btn-hover-border: transparent;
  --btn-hover-color: var(--primary);
}

/* === SECONDARY VARIANTS === */
.secondary.solid {
  --btn-bg: var(--secondary-container);
  --btn-border: var(--secondary);
  --btn-color: var(--secondary);
  --btn-hover-bg: var(--secondary);
  --btn-hover-border: var(--secondary);
  --btn-hover-color: var(--on-secondary);
}

.secondary.outline {
  --btn-bg: transparent;
  --btn-border: var(--secondary);
  --btn-color: var(--secondary);
  --btn-hover-bg: var(--secondary-container);
  --btn-hover-border: var(--secondary);
  --btn-hover-color: var(--on-secondary-container);
}

.secondary.ghost {
  --btn-bg: transparent;
  --btn-border: transparent;
  --btn-color: var(--secondary);
  --btn-hover-bg: var(--secondary-container);
  --btn-hover-border: transparent;
  --btn-hover-color: var(--secondary);
}

/* === TERTIARY VARIANTS === */
.tertiary.solid {
  --btn-bg: var(--tertiary-container);
  --btn-border: var(--tertiary);
  --btn-color: var(--tertiary);
  --btn-hover-bg: var(--tertiary);
  --btn-hover-border: var(--tertiary);
  --btn-hover-color: var(--on-tertiary);
  color: var(--on-tertiary-container);
}

.tertiary.outline {
  --btn-bg: transparent;
  --btn-border: var(--tertiary);
  --btn-color: var(--tertiary);
  --btn-hover-bg: var(--tertiary-container);
  --btn-hover-border: var(--tertiary);
  --btn-hover-color: var(--on-tertiary-container);
}

.tertiary.ghost {
  --btn-bg: transparent;
  --btn-border: transparent;
  --btn-color: var(--tertiary);
  --btn-hover-bg: var(--tertiary-container);
  --btn-hover-border: transparent;
  --btn-hover-color: var(--tertiary);
}

/* === ERROR VARIANTS (per pulsante Elimina) === */
.error.solid {
  --btn-bg: var(--error-container);
  --btn-border: var(--error);
  --btn-color: var(--error);
  --btn-hover-bg: var(--error);
  --btn-hover-border: var(--error);
  --btn-hover-color: var(--on-error);
}

.error.outline {
  --btn-bg: transparent;
  --btn-border: var(--error);
  --btn-color: var(--error);
  --btn-hover-bg: var(--error-container);
  --btn-hover-border: var(--error);
  --btn-hover-color: var(--on-error-container);
}

.error.ghost {
  --btn-bg: transparent;
  --btn-border: transparent;
  --btn-color: var(--error);
  --btn-hover-bg: var(--error-container);
  --btn-hover-border: transparent;
  --btn-hover-color: var(--error);
}

/* === NEUTRAL/GRAY VARIANTS === */
.neutral.solid {
  --btn-bg: var(--surface-variant);
  --btn-border: var(--outline);
  --btn-color: var(--on-surface-variant);
  --btn-hover-bg: var(--surface);
  --btn-hover-border: var(--outline);
  --btn-hover-color: var(--on-surface);
}

.neutral.outline {
  --btn-bg: transparent;
  --btn-border: var(--outline);
  --btn-color: var(--on-surface-variant);
  --btn-hover-bg: var(--surface-variant);
  --btn-hover-border: var(--outline);
  --btn-hover-color: var(--on-surface);
}

.neutral.ghost {
  --btn-bg: transparent;
  --btn-border: transparent;
  --btn-color: var(--on-surface-variant);
  --btn-hover-bg: var(--surface-variant);
  --btn-hover-border: transparent;
  --btn-hover-color: var(--on-surface);
}

/* === LAYOUT === */
.buttonContainer {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  flex-wrap: nowrap;
  width: 100%;
  min-width: 0;
}

.flex75 {
  flex: 3;
  white-space: nowrap;
}

.flex25 {
  flex: 1;
  white-space: nowrap;
}

/* === TOOLTIP PER DISABLED === */
.btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none;
  position: relative;
}

.btn:disabled::after {
  content: attr(data-disabled-message);
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%) translateY(-8px);
  background-color: var(--error);
  color: var(--on-error);
  padding: 0.5rem 0.75rem;
  border-radius: var(--radius-sm);
  font-size: var(--text-xs);
  font-weight: var(--font-semibold);
  white-space: nowrap;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease;
  z-index: 1000;
}

.btn:disabled:hover::after {
  opacity: 1;
}

/* Aggiungi questo alla fine del Button.module.css */

/* === SPINNER === */
.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
